{{- $ca := genCA "kubefed-admission-webhook-ca" 3650 }}
{{- $cn := printf "%s-admission-webhook" .Release.Name }}
{{- $altName1 := printf "kubefed-admission-webhook.%s" .Release.Namespace }}
{{- $altName2 := printf "kubefed-admission-webhook.%s.svc" .Release.Namespace }}
{{- $cert := genSignedCert $cn nil (list $altName1 $altName2) 3650 $ca }}
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
# For namespace scoped deployments, create a unique cluster-scoped resource
# using the namespace.
{{- if and .Values.global.scope (eq .Values.global.scope "Namespaced") }}
  name: validations.core.kubefed.k8s.io-{{ .Release.Namespace }}
{{ else }}
  name: validations.core.kubefed.k8s.io
{{ end }}
webhooks:
- name: federatedtypeconfigs.core.kubefed.k8s.io
  clientConfig:
    service:
      namespace: {{ .Release.Namespace | quote }}
      name: kubefed-admission-webhook
      path: /apis/validation.core.kubefed.k8s.io/v1beta1/federatedtypeconfigs
{{ if .Values.kubeCA }}
    caBundle: {{ .Values.kubeCA | quote }}
{{ else }}
    caBundle: {{ b64enc $ca.Cert | quote }}
{{ end }}
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - core.kubefed.k8s.io
    apiVersions:
    - v1beta1
    resources:
    - federatedtypeconfigs
    - federatedtypeconfigs/status
  failurePolicy: Fail
{{- if and .Values.global.scope (eq .Values.global.scope "Namespaced") }}
# For namespace scoped deployments: filter admission webhook requests for
# resources whose namespace matches the default namespace label applied by helm
# upon creating the namespace. User must set this label manually if namespace
# is created prior to installing chart with helm.
# TODO(font): Use custom namespace label once helm adds support for it. See
# https://github.com/helm/helm/issues/4178 for more details.
  namespaceSelector:
    matchLabels:
      name: {{ .Release.Namespace }}
{{ end }}
- name: kubefedclusters.core.kubefed.k8s.io
  clientConfig:
    service:
      namespace: {{ .Release.Namespace | quote }}
      name: kubefed-admission-webhook
      path: /apis/validation.core.kubefed.k8s.io/v1beta1/kubefedclusters
{{ if .Values.kubeCA }}
    caBundle: {{ .Values.kubeCA | quote }}
{{ else }}
    caBundle: {{ b64enc $ca.Cert | quote }}
{{ end }}
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - core.kubefed.k8s.io
    apiVersions:
    - v1beta1
    resources:
    - kubefedclusters
  failurePolicy: Fail
{{- if and .Values.global.scope (eq .Values.global.scope "Namespaced") }}
# See comment above.
  namespaceSelector:
    matchLabels:
      name: {{ .Release.Namespace }}
{{ end }}
- name: kubefedconfigs.core.kubefed.k8s.io
  clientConfig:
    service:
      namespace: {{ .Release.Namespace | quote }}
      name: kubefed-admission-webhook
      path: /apis/validation.core.kubefed.k8s.io/v1beta1/kubefedconfigs
{{ if .Values.kubeCA }}
    caBundle: {{ .Values.kubeCA | quote }}
{{ else }}
    caBundle: {{ b64enc $ca.Cert | quote }}
{{ end }}
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - core.kubefed.k8s.io
    apiVersions:
    - v1beta1
    resources:
    - kubefedconfigs
  failurePolicy: Fail
{{- if and .Values.global.scope (eq .Values.global.scope "Namespaced") }}
# See comment above.
  namespaceSelector:
    matchLabels:
      name: {{ .Release.Namespace }}
{{ end }}
---
# The same comments for ValidatingWebhookConfiguration apply here to
# MutatingWebhookConfiguration.
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
{{- if and .Values.global.scope (eq .Values.global.scope "Namespaced") }}
  name: mutation.core.kubefed.k8s.io-{{ .Release.Namespace }}
{{ else }}
  name: mutation.core.kubefed.k8s.io
{{ end }}
webhooks:
- name: kubefedconfigs.core.kubefed.k8s.io
  clientConfig:
    service:
      namespace: {{ .Release.Namespace | quote }}
      name: kubefed-admission-webhook
      path: /apis/mutation.core.kubefed.k8s.io/v1beta1/kubefedconfigs
{{ if .Values.kubeCA }}
    caBundle: {{ .Values.kubeCA | quote }}
{{ else }}
    caBundle: {{ b64enc $ca.Cert | quote }}
{{ end }}
  rules:
  - operations:
    - CREATE
    apiGroups:
    - core.kubefed.k8s.io
    apiVersions:
    - v1beta1
    resources:
    - kubefedconfigs
  failurePolicy: Fail
{{- if and .Values.global.scope (eq .Values.global.scope "Namespaced") }}
  namespaceSelector:
    matchLabels:
      name: {{ .Release.Namespace }}
{{ end }}
---
apiVersion: v1
kind: Secret
metadata:
  namespace: {{ .Release.Namespace }}
  name: kubefed-admission-webhook-serving-cert
type: kubernetes.io/tls
stringData:
  tls.crt: {{ $cert.Cert | quote }}
  tls.key: {{ $cert.Key | quote }}
