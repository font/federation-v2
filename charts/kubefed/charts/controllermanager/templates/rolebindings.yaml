{{- if and .Values.global.scope (eq .Values.global.scope "Namespaced") }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubefed-rolebinding
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubefed-role
subjects:
- kind: ServiceAccount
  name: kubefed-controller
  namespace: {{ .Release.Namespace }}
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubefed-config-rolebinding
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubefed-config-role
subjects:
- kind: ServiceAccount
  name: kubefed-controller
  namespace: {{ .Release.Namespace }}
# The comment in webhook.yaml about installing one instance also applies to the
# conditional block below.
{{ if (or (or (not .Values.global.scope) (eq .Values.global.scope "Cluster")) (not (.Capabilities.APIVersions.Has "core.kubefed.k8s.io/v1beta1"))) }}
---
# Grant admission webhook access to core.kubefed.k8s.io in the KubeFed system
# namespace only, regardless of kubefed deployment scope.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubefed-admission-webhook-rolebinding
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubefed-admission-webhook-role
subjects:
- kind: ServiceAccount
  name: kubefed-admission-webhook
  namespace: {{ .Release.Namespace }}
---
# Allow the admission webhook to read the config for terminating
# authentication.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubefed-admission-webhook:apiextension-viewer
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: kubefed-admission-webhook
  namespace: {{ .Release.Namespace }}
{{ end }}
